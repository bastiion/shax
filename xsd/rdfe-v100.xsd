<xs:schema xmlns="http://www.rdfe.org/ns/model" xmlns:t="http://www.rdfe.org/ns/model" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.rdfe.org/ns/model" elementFormDefault="qualified">
  <!--
    ================================================================================
     
    generated by:     xsdr (operation 'xsd')
    
    creation time:    2019-01-25T16:43:35.818+01:00
    
    ================================================================================-->
  <!--
    ===============            
    e l e m e n t s
    ===============    
-->
  <xs:element name="semanticMap" type="semanticMapType"/>
  <!--   
    ============================            
    c o m p l e t x    t y p e s
    ============================
-->
  <xs:complexType name="contextType">
    <xs:choice xmlns:x="http://www.xsdr.org/ns/xsdd" x:occ="*" minOccurs="0" maxOccurs="unbounded">
      <xs:element name="var" type="t:varType"/>
      <xs:element name="fun" type="t:funType"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="funType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" use="required" type="xs:NCName"/>
        <xs:attribute name="params" type="xs:string"/>
        <xs:attribute name="as" type="xs:string"/>
        <xs:attribute name="code" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="importType">
    <xs:attribute name="href" use="required" type="xs:anyURI"/>
  </xs:complexType>
  <xs:complexType name="namespaceType">
    <xs:attribute name="iri" use="required" type="xs:anyURI"/>
    <xs:attribute name="prefix" use="required" type="xs:NCName"/>
  </xs:complexType>
  <xs:complexType name="propertyType">
    <xs:sequence>
      <xs:element name="valueItemCase" minOccurs="0" maxOccurs="unbounded" type="t:valueItemCaseType"/>
    </xs:sequence>
    <xs:attribute name="iri" use="required" type="xs:anyURI"/>
    <xs:attribute name="value" use="required" type="xs:string"/>
    <xs:attribute name="type" type="typeNameOrTypeTokenType"/>
    <xs:attribute name="list" type="xs:boolean"/>
    <xs:attribute name="objectModelID" type="xs:Name"/>
    <xs:attribute name="card" type="cardType"/>
    <xs:attribute name="reverse" type="xs:boolean"/>
    <xs:attribute name="lang" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="resourceType">
    <xs:sequence>
      <xs:element name="targetNodeAssertion" minOccurs="0" maxOccurs="unbounded" type="t:targetNodeAssertionType"/>
      <xs:element name="property" minOccurs="0" maxOccurs="unbounded" type="t:propertyType"/>
    </xs:sequence>
    <xs:attribute name="modelID" use="required" type="xs:NCName"/>
    <xs:attribute name="assertedTargetNodes" type="xs:string"/>
    <xs:attribute name="iri" type="xs:string"/>
    <xs:attribute name="type" type="t:nameList"/>
    <xs:attribute name="targetNodeNamespace" type="t:anyURIMatchType"/>
    <xs:attribute name="targetNodeName" type="t:NCNameMatchType"/>
  </xs:complexType>
  <xs:complexType name="semanticMapType">
    <xs:sequence>
      <xs:element name="targetAssertion" minOccurs="0" maxOccurs="unbounded" type="t:targetAssertionType"/>
      <xs:element name="import" minOccurs="0" maxOccurs="unbounded" type="t:importType"/>
      <xs:element name="namespace" minOccurs="0" maxOccurs="unbounded" type="t:namespaceType"/>
      <xs:element name="context" minOccurs="0" type="t:contextType"/>
      <xs:element name="resource" minOccurs="0" maxOccurs="unbounded" type="t:resourceType"/>
    </xs:sequence>
    <xs:attribute name="iri" use="required" type="xs:anyURI"/>
    <xs:attribute name="targetNamespace" use="required" type="t:anyURIMatchType"/>
    <xs:attribute name="targetName" use="required" type="t:NCNameMatchType"/>
  </xs:complexType>
  <xs:complexType name="targetAssertionType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="expr" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="targetNodeAssertionType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="expr" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="valueItemCaseType">
    <xs:attribute name="test" use="required" type="xs:string"/>
    <xs:attribute name="iri" type="xs:anyURI"/>
    <xs:attribute name="value" type="xs:string"/>
    <xs:attribute name="type" type="typeNameOrTypeTokenType"/>
    <xs:attribute name="list" type="xs:boolean"/>
    <xs:attribute name="objectModelID" type="xs:Name"/>
    <xs:attribute name="lang" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="varType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" use="required" type="xs:NCName"/>
        <xs:attribute name="value" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--   
    ========================            
    s i m p l e    t y p e s
    ========================
-->
  <xs:simpleType name="anyURIMatchType">
    <xs:union memberTypes="xs:anyURI t:zeroLengthStringType t:wildCardType"/>
  </xs:simpleType>
  <xs:simpleType name="cardType">
    <xs:restriction base="xs:string">
      <xs:pattern value="[?*+]|\d+(-(\d+)?)?|-\d+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="nameList">
    <xs:list itemType="xs:Name"/>
  </xs:simpleType>
  <xs:simpleType name="NCNameMatchType">
    <xs:union memberTypes="xs:NCName t:wildCardType"/>
  </xs:simpleType>
  <xs:simpleType name="typeNameOrTypeTokenType">
    <xs:union memberTypes="xs:Name t:typeTokenType"/>
  </xs:simpleType>
  <xs:simpleType name="typeTokenType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="#iri"/>
      <xs:enumeration value="#resource"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="wildCardType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="zeroLengthStringType">
    <xs:restriction base="xs:string">
      <xs:length value="0"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>